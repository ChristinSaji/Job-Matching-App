AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template for Job Matching Application

Resources:
  CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: "job-matching-user-pool"
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireUppercase: true
          RequireSymbols: true
      Schema:
        - AttributeDataType: "String"
          Name: "email"
          Required: true

  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: "job-matching-app-client"
      UserPoolId:
        Ref: CognitoUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      SupportedIdentityProviders:
        - COGNITO

  ElasticBeanstalkApplication:
    Type: "AWS::ElasticBeanstalk::Application"
    Properties:
      ApplicationName: "job-matching-app"

  ElasticBeanstalkApplicationVersion:
    Type: "AWS::ElasticBeanstalk::ApplicationVersion"
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      Description: "Version 1.0"
      SourceBundle:
        S3Bucket: "job-matching-app-bucket"
        S3Key: "Dockerrun.aws.json"

  ElasticBeanstalkEnvironment:
    Type: "AWS::ElasticBeanstalk::Environment"
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      EnvironmentName: "job-matching-app-env"
      SolutionStackName: "64bit Amazon Linux 2023 v4.3.5 running Docker"
      VersionLabel: !Ref ElasticBeanstalkApplicationVersion
      OptionSettings:
        - Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: "InstanceType"
          Value: "t2.micro"
        - Namespace: "aws:elasticbeanstalk:environment"
          OptionName: "EnvironmentType"
          Value: "SingleInstance"
        - Namespace: "aws:elasticbeanstalk:environment"
          OptionName: "ServiceRole"
          Value: "arn:aws:iam::700690205031:role/LabRole"
        - Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: "EC2KeyName"
          Value: "vockey"
        - Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: "IamInstanceProfile"
          Value: "LabInstanceProfile"
        - Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "VITE_USER_POOL_ID"
          Value: !Ref CognitoUserPool
        - Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "VITE_USER_POOL_CLIENT_ID"
          Value: !Ref CognitoUserPoolClient

Outputs:
  UserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref CognitoUserPool
    Export:
      Name: "UserPoolId"

  UserPoolClientId:
    Description: "Cognito User Pool Client ID"
    Value: !Ref CognitoUserPoolClient
    Export:
      Name: "UserPoolClientId"

  EnvironmentURL:
    Description: "URL of the Elastic Beanstalk environment"
    Value: !GetAtt ElasticBeanstalkEnvironment.EndpointURL
